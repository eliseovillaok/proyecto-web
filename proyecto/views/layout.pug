doctype html
html
  head
    title= title
    meta(charset='utf-8')
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='apple-touch-icon' sizes='180x180' href='/icon/apple-touch-icon.png')
    link(rel='icon' type='image/png' sizes='32x32' href='/icon/favicon-32x32.png')
    link(rel='icon' type='image/png' sizes='16x16' href='/icon/favicon-16x16.png')
    //- link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.css@7.0.0/themes/algolia-min.css")
    //- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@meilisearch/instant-meilisearch/templates/basic_search.css" />
  body
    block content
  
  script(src='https://cdn.jsdelivr.net/npm/@meilisearch/instant-meilisearch/dist/instant-meilisearch.umd.min.js')
  script(src='https://cdn.jsdelivr.net/npm/instantsearch.js@4')

  script.
    const search = instantsearch({
    indexName: "dataset",
    searchClient: instantMeiliSearch(
    "http://localhost:7700"
    ).searchClient
    });
    search.addWidgets([
    instantsearch.widgets.searchBox({
    container: "#searchbox",
    placeholder: 'Soy tu buscador de proyectos favorito...',
    showSubmit: false
    }),
    instantsearch.widgets.configure({ 
    hitsPerPage: 16
    }),
    instantsearch.widgets.hits({
    container: "#hits",
    templates: {
    item: `
        <article>
          <p>Titulo: {{#helpers.highlight}}{ "attribute": "nombre", "highlightedTagName": "mark" }{{/helpers.highlight}}</p>
          <p>Estatus: {{#helpers.highlight}}{ "attribute": "estatus", "highlightedTagName": "mark" }{{/helpers.highlight}}</p>
          <p>Based On: {{#helpers.highlight}}{ "attribute": "basedOn", "highlightedTagName": "mark" }{{/helpers.highlight}}</p>
          <p>Tipo: {{#helpers.highlight}}{ "attribute": "tipo", "highlightedTagName": "mark" }{{/helpers.highlight}}</p>
        </article>
    `
    }
    })
    ]);
    search.start();
    document.querySelectorAll('.filterCheckbox').forEach(function(checkbox) {
      checkbox.addEventListener('change', function() {
        // Obtener todos los checkboxes
        const checkboxes = document.querySelectorAll('.filterCheckbox');
        let filters = [];

        // Crear la cadena de filtros combinando los valores de los checkboxes seleccionados
        checkboxes.forEach(function(cb) {
          if (cb.checked) {
            filters.push(`${cb.dataset.filter} = "${cb.value}"`);
          }
        });

        // Configurar los filtros en la búsqueda
        search.addWidgets([
          instantsearch.widgets.configure({
            filters: filters.join(' AND ')
          }),
        ]);

        // Actualizar la búsqueda
        search.refresh();
      });
    });
